{
  "parser": "babel-eslint", // eslint가 아닌 babel이 해석해서 최선문법 에러 안남.
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module", // import, export 를 하기 때문에 모듈을 사용
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true, // browser에서 돌아가니까
    "node": true, // node에서도 돌아가니까
    "es6": true // 최신 문법 쓰니까 
  },
  "extends": [
    "airbnb" // 기존 recommended 들은 규약이 약하다. airbnb가 규제가 강하다.
  ],
  "plugins": [
    "import",
    "react-hooks",
    "eslint-config-prettier"
  ],
  "rules": {
    "linebreak-style": 0,
    "jsx-a11y/label-has-associated-control": 0,
    "jsx-a11y/anchor-is-valid": 0,
    "react/forbid-prop-types": 0,
    "react/jsx-one-expression-per-line": 0,
    "object-curly-newline": 0,
    "react/jsx-filename-extension": [1, { "extensions": ["js", "jsx"] }],
    // 확장자로 js와 jsx 둘다 허용하도록 수정
    "arrow-parens": ["warn", "as-needed"],
    // 화살표 함수의 파라미터가 하나일때 괄호 생략
    "no-unused-vars": ["off"],
    // 사용하지 않는 변수가 있을때 빌드에러가 나던 규칙 해제
    "no-console": ["off"],
    // 콘솔을 쓰면 에러가 나던 규칙 해제
    "import/prefer-default-export": ["off"],
    // export const 문을 쓸때 에러를 내는 규칙 해제
    "react-hooks/exhaustive-deps": ["warn"],
    // hooks의 의존성배열이 충분하지 않을때 강제로 의존성을 추가하는 규칙을 완화
    "react/jsx-props-no-spreading": ["warn"],
    // props spreading을 허용하지 않는 규칙 해제
    "react/prop-types": ["off"],
    // props의 타입체크를 처리하려면 prop-types보단 차라리 typescript를 사용하는게 낫다.
    "no-underscore-dangle": ["off"]
    // camelCase를 따르는게 좋긴 하지만 `_`를 어쩔수 없이 써야하는 상황을 위해(가령 백엔드가 mongoDB)
  }
}